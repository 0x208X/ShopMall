package com.superman.superman.dao;

import com.superman.superman.dto.MemberDetail;
import com.superman.superman.model.Oder;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import java.util.List;

@Mapper
public interface OderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oder
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);
//    @Select("select * from oder where p_id = #{pid} and order_status in ('1','2','-1') ")

    @Select("select * from oder where p_id =#{pid} and order_status=#{status}  ORDER BY order_create_time sort ")
    List<Oder> queryPddOderList(@Param("pid") String id, @Param("status") Integer status, @Param("sort") String sort);

    /**
     * 根据返佣比率算出预估收入
     *
     * @param score
     * @param id
     * @return
     */
    @Select("select sum(promotion_amount)*#{score} from oder where p_id =#{id}")
    Integer sumMoneyForIdToScore(@Param("score") Double score, @Param("id") String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oder
     *
     * @mbggenerated
     */
    int insertSelective(Oder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oder
     *
     * @mbggenerated
     */
    Oder selectByPrimaryKey(Long id);


    /**
     * 单个PID统计订单预估总收入
     *
     * @param pid
     * @return
     */
    @Select("select  SUM(promotion_amount)  from oder  where p_id = #{pid} and order_status in ('1','2','3')")
    Integer selectPid(String pid);



    /**
     * 根据pid类别统计已结算订单的总收入
     *
     * @param list
     * @return
     */
    Integer selectPidInFinish(@Param("list") List list);

    @Select("select IFNULL(pdd.promotion_amount,0)+IFNULL(tb.commission*100,0) as count from userinfo us " +
            "left join oder pdd on pdd.p_id=us.pddPid and  pdd.order_status in(1,2,3)" +
            "left join tboder tb on tb.adzone_id=us.tbPid and tb.tk_status=12  WHERE us.id=#{uid}")
    Long superQueryWaitMoneyForUserSimple(Integer uid);


    /**
     * 超级统计所有 平台未结算订单（只需要传入用户id 支持多用户id传入）
     *
     * @param list
     * @return
     */
    Long superQueryForListToWait(List<Long> list);

    /**
     * 超级统计所有 平台已结算订单（只需要传入用户id 支持多用户id传入）
     *
     * @param list
     * @return
     */
    Long superQueryForListToFinsh(List<Long> list);



    List<Oder> sumAllDevOderByOderCreateTime(@Param("list") List list, @Param("startTime") Long startTime, @Param("endTime") Long endTime);

    @Select("  select SUM(s.money) as money,  SUM(s.counts) as sums FROM(SELECT  IFNULL(SUM(tb.commission),0)*1000 as money,COUNT(tb.id) as counts FROM tboder tb left join userinfo u on tb.adzone_id=u.tbPid\n" +
            "WHERE u.id=#{id} and tb.tk_status in ('3','12','14')  and tb.odercreate_time between #{tbstartTime} and #{tbendTime}  UNION   \n" +
            "SELECT IFNULL(SUM(tb.promotion_amount),0) as money ,COUNT(tb.id) as counts FROM\n" +
            "oder tb left join userinfo u on tb.p_id=u.pddPid WHERE u.id=#{id}    and tb.order_create_time between #{pddstartTime} and #{pddendTime} and tb.order_status in (0,1,2,3,5)) as s\n" +
            "  ")
    MemberDetail sumAllDevOderByOderCreateTimeForMb(@Param("id") Integer id, @Param("tbstartTime") String tbstartTime, @Param("tbendTime") String tbendTime, @Param("pddstartTime") Long pddstartTime, @Param("pddendTime") Long pddendTime);



    MemberDetail sumAllDevOderByOderCreateTimeForAgent(@Param("list") List list, @Param("tbstartTime") String tbstartTime, @Param("tbendTime") String tbendTime, @Param("pddstartTime") Long pddstartTime, @Param("pddendTime") Long pddendTime);


}