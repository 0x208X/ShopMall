<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.superman.superman.dao.HotUserMapper" >
  <resultMap id="BaseResultMap" type="com.superman.superman.model.HotUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="loginName" property="loginname" jdbcType="VARCHAR" />
    <result column="loginPwd" property="loginpwd" jdbcType="VARCHAR" />
    <result column="loginSecret" property="loginsecret" jdbcType="BIGINT" />
    <result column="userSex" property="usersex" jdbcType="INTEGER" />
    <result column="userScore" property="userscore" jdbcType="INTEGER" />
    <result column="userPhoto" property="userphoto" jdbcType="VARCHAR" />
    <result column="userStatus" property="userstatus" jdbcType="INTEGER" />
    <result column="userTotalScore" property="usertotalscore" jdbcType="BIGINT" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="userPhone" property="userphone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, userName, loginName, loginPwd, loginSecret, userSex, userScore, userPhoto, userStatus, 
    userTotalScore, createTime, updateTime, status, userPhone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from hot_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from hot_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.superman.superman.model.HotUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into hot_user (id, userName, loginName, 
      loginPwd, loginSecret, userSex, 
      userScore, userPhoto, userStatus, 
      userTotalScore, createTime, updateTime, 
      status, userPhone)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, 
      #{loginpwd,jdbcType=VARCHAR}, #{loginsecret,jdbcType=BIGINT}, #{usersex,jdbcType=INTEGER}, 
      #{userscore,jdbcType=INTEGER}, #{userphoto,jdbcType=VARCHAR}, #{userstatus,jdbcType=INTEGER}, 
      #{usertotalscore,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{userphone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.superman.superman.model.HotUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into hot_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="loginname != null" >
        loginName,
      </if>
      <if test="loginpwd != null" >
        loginPwd,
      </if>
      <if test="loginsecret != null" >
        loginSecret,
      </if>
      <if test="usersex != null" >
        userSex,
      </if>
      <if test="userscore != null" >
        userScore,
      </if>
      <if test="userphoto != null" >
        userPhoto,
      </if>
      <if test="userstatus != null" >
        userStatus,
      </if>
      <if test="usertotalscore != null" >
        userTotalScore,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userphone != null" >
        userPhone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null" >
        #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="loginsecret != null" >
        #{loginsecret,jdbcType=BIGINT},
      </if>
      <if test="usersex != null" >
        #{usersex,jdbcType=INTEGER},
      </if>
      <if test="userscore != null" >
        #{userscore,jdbcType=INTEGER},
      </if>
      <if test="userphoto != null" >
        #{userphoto,jdbcType=VARCHAR},
      </if>
      <if test="userstatus != null" >
        #{userstatus,jdbcType=INTEGER},
      </if>
      <if test="usertotalscore != null" >
        #{usertotalscore,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="userphone != null" >
        #{userphone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.superman.superman.model.HotUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hot_user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null" >
        loginPwd = #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="loginsecret != null" >
        loginSecret = #{loginsecret,jdbcType=BIGINT},
      </if>
      <if test="usersex != null" >
        userSex = #{usersex,jdbcType=INTEGER},
      </if>
      <if test="userscore != null" >
        userScore = #{userscore,jdbcType=INTEGER},
      </if>
      <if test="userphoto != null" >
        userPhoto = #{userphoto,jdbcType=VARCHAR},
      </if>
      <if test="userstatus != null" >
        userStatus = #{userstatus,jdbcType=INTEGER},
      </if>
      <if test="usertotalscore != null" >
        userTotalScore = #{usertotalscore,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="userphone != null" >
        userPhone = #{userphone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.superman.superman.model.HotUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hot_user
    set userName = #{username,jdbcType=VARCHAR},
      loginName = #{loginname,jdbcType=VARCHAR},
      loginPwd = #{loginpwd,jdbcType=VARCHAR},
      loginSecret = #{loginsecret,jdbcType=BIGINT},
      userSex = #{usersex,jdbcType=INTEGER},
      userScore = #{userscore,jdbcType=INTEGER},
      userPhoto = #{userphoto,jdbcType=VARCHAR},
      userStatus = #{userstatus,jdbcType=INTEGER},
      userTotalScore = #{usertotalscore,jdbcType=BIGINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      userPhone = #{userphone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>